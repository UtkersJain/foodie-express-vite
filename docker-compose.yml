services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: foodie_postgres
    environment:
      POSTGRES_DB: foodie_express
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d # This runs SQL scripts on first volume creation
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js Backend Application (RPC API)
  frontend_backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: foodie_backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/foodie_express
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # WebSocket Server (Node.js)
  websocket:
    build:
      context: ./websocket-server
      dockerfile: Dockerfile
    container_name: foodie_websocket
    ports:
      - "3002:3001" # Map container port 3001 to host port 3002 to avoid conflict with backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/foodie_express
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Frontend Server (serves Vite build)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: foodie_frontend
    ports:
      - "3000:80"
    depends_on:
      frontend_backend:
        condition: service_healthy
      websocket:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: foodie_network
